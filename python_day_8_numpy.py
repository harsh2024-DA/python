# -*- coding: utf-8 -*-
"""Untitled11.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OZEkUPeEiD3OGwAeUm5zc0UPi8a4MnsH

#1. .ndmin
"""

import numpy as np

arr = np.array([1,2,3,4,5,6,5])

arr.ndim

arr1 = np.array([[1,2,3,4,5,6], [6,5,4,3,2,1]])

arr1.ndim

"""# .shape"""

arr1

arr

arr.shape

arr1.shape

"""# . size"""

arr.size

arr1.size

"""# .dtype"""

arr.dtype

arr1.dtype

"""# . itemsize
 The size in bytes of each element in the array.
"""

arr.itemsize

arr1.itemsize

a = 80
b = 82.56

type(a)

"""# . Transpose .T"""

arr1

arr1.T

arr1

"""# .real  & .imag"""

arr2 = np.array([1+2j, 3+4j])

arr2.dtype

arr2.real

arr2.imag

"""#  .flat"""

arr1

arr1.flat

for item in arr1.flat:
  print(item)

str = "Hello Harsh"
str1 = "Harsh"

if str1 in str:
  print("word is found")

"""Data Types in NumPy
NumPy offers a variety of data types, which are defined with dtype. Here are some common data types:

Integer:

numpy.int8, numpy.int16, numpy.int32, numpy.int64

Unsigned Integer:

numpy.uint8, numpy.uint16, numpy.uint32, numpy.uint64

Float:

numpy.float16, numpy.float32, numpy.float64

Complex:

numpy.complex64, numpy.complex128

Boolean:

numpy.bool_

String:

numpy.str_ or numpy.string_

Object:

numpy.object_
"""

arr_int = np.array([1,2,3], dtype = np.int32)

arr_int.dtype

"""#indexing and slicing"""

arr = np.array([[1,2,3], [4,5,6], [7,8,9]])

arr

arr[1, 2]    #1 is for row, 2 is for column

arr[2,2]

arr[2,0]

arr[1, :]   # : is use for select all

arr[:, 1]

arr[0:2, 1:3]

arr

arr[-1, -1]

"""# Array Manipulation"""

arr = np.array([[1,2,3], [4,5,6]])

arr

arr.shape

arr.reshape(3,2)

arr

arr.reshape(1,6)

arr.reshape(6,1)

"""# concatenation"""

arr

arr1 = np.array([[9,8,7], [77,88,99]])

arr1

np.concatenate((arr, arr1), axis =0)

np.concatenate((arr , arr1), axis= 1)

arr = np.array([1,2,3,4,5,6])

arr

np.split(arr, 3)

arr

np.split(arr, 5)

np.array_split(arr , 5)

"""#math  operation

"""

arr

arr2 = np.array([11,24,35,44,74,25])

arr2

arr + arr2

np.add(arr, arr2)

arr

np.sum(arr)

np.mean(arr)

np.std(arr)

np.var(arr)

np.median(arr)

np.max(arr)

np.percentile(arr , 75)

np.quantile(arr , 0.5)

data1 = np.array([1,2,3,4,5])
data2 = np.array([5,4,3,2,1])

np.corrcoef(data1, data2)

np.cov(data1, data2)

data1

np.cumsum(data1)

"""#sorting"""

arr = np.array([8,4,5,2,3,6,9,7,4,5,8,2,3,6])

arr

np.sort(arr)

arr

np.unique(arr)

np.where(arr==2)

np.where(arr > 3)

arr_with_nan = np.array([1,2,np.nan, 4, np.nan])

arr_with_nan

np.isnan(arr_with_nan)

arr_with_nan

np.mean(arr_with_nan)

np.nanmean(arr_with_nan)

np.std(arr_with_nan)

np.nanstd(arr_with_nan)

